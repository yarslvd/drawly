import { useEffect } from "react";
import { Button, Alert } from "@mui/material";
import Link from "next/link";
import { useForm } from "react-hook-form";
import { useDispatch, useSelector } from "react-redux";
import { useRouter } from "next/router";

import styles from "./ChangePassword.module.scss";

import { fetchChangePassword } from "@/store/slices/authSlice";
import { fetchCheckToken } from "@/store/slices/authSlice";
import Head from "next/head";

const ChangePassword = () => {
  const dispatch = useDispatch();
  const { query } = useRouter();

  const { userInfo, error } = useSelector((state) => state.auth);

  const {
    register,
    handleSubmit,
    formState: { errors },
    watch,
  } = useForm({
    defaultValues: {
      password: "",
      confirmPassword: "",
    },
    mode: "onSubmit",
  });

  const onSubmit = async (values) => {
    console.log(values);
    const token = query.token;
    dispatch(fetchChangePassword({ token, values }));
    // navigate("/login");
  };

  useEffect(() => {
    dispatch(fetchCheckToken(query.token));
  }, []);

  return (
    <>
      <Head>
        <title>Password Change</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <section className={styles.background}>
          <div className={styles.contentContainer}>
            <Link href="/" className={styles.logo}>
              <h2>drawly</h2>
            </Link>
            {error ? (
              <h1>Error</h1>
            ) : (
              <>
                <div className={styles.heading}>
                  <h1>Change Password</h1>
                  <span>Your new password must be different from previous</span>
                </div>

                {error && <Alert severity="error">{error}</Alert>}
                {!Object.keys(errors).length == 0 && (
                  <Alert severity="warning" className={styles.errmsg}>
                    {Object.values(errors)[0].message}
                  </Alert>
                )}

                <form onSubmit={handleSubmit(onSubmit)}>
                  <div className={styles.inputs}>
                    <div className={styles.form}>
                      <label htmlFor="password">Password</label>
                      <div className={styles.field}>
                        <input
                          type="password"
                          id="password"
                          required
                          minLength={8}
                          {...register("password", {
                            pattern: {
                              value:
                                /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,
                              message: "Password is not strong enough",
                            },
                          })}
                          placeholder="New password"
                        />
                      </div>
                    </div>
                    <div className={styles.form}>
                      <label htmlFor="confirm">Repeat Password</label>
                      <div className={styles.field}>
                        <input
                          type="password"
                          id="confirm"
                          required
                          {...register("confirmPassword", {
                            validate: (value) => {
                              if (watch("password") != value) {
                                return "Your passwords do no match";
                              }
                            },
                          })}
                          placeholder="Confirm password"
                        />
                      </div>
                    </div>
                  </div>
                  <div className={styles.button}>
                    <Button type="submit" variant="contained">
                      Submit
                    </Button>
                  </div>
                </form>
              </>
            )}
          </div>
          <div className={styles.image}>
            <div className={styles.text}>
              <h2>drawly</h2>
            </div>
            <img src="/assets/bg/changepassword.jpg" alt="" />
          </div>
        </section>
      </main>
    </>
  );
};

export default ChangePassword;
